/*========================================================
 
       T-427-WEPO Web Programming II
       Reykjavik University
       Assignment 6: FlexNPex
       Part: CSS
       Assignment Due: 28.03.2018
       Authors:
               Darri Valgarðsson,
               Edda Steinunn,
               Sigurður Sturla Bjarnasson
 ========================================================*/

/* GLÓSUR - FLEX CONTAINER ATTRIBUTES:
 * hafa main axis og cross axis sem eru hornrétt (fer eftir hvort er hvað eftir hvort direction er row eða col)
 * flex-direction: row | row-reverse | column | column-reverse
 * flex-wrap: nowrap | wrap | wrap-reverse
 * flex-flow: (flex-direction) (flex-wrap)
 * justify-content: (hvernig hlutir raðast á main axis) flex-start | center | space-around | space-between | flex-end;
 * align-items: (hvernig hlutir raðast á cross axis) flex-start | center | baseline | stretch(def) | flex-end;
 * align-content: (höndlar hvernig hlutir raðast ef það er overflow í containernum væntanlega virkar bara með wrap) flex-start | center | space-around | space-between | stretch | flex-end;
 * 
 * GLÓSUR - FLEX ITEM ATTRIBUTES:
 * flew-grow: (má ég stækka? hversu mikið má ég stækka í hlutfalli við hina?) 0 (ekki stækka) | 0.xx (hlutfall - má eiga allt afgangs plássið)
 * flex-shrink: öfugt við flex-grow
 * flex-basis: (size of context box, impacted by box sizing, accept same values as width) auto | content | % | px | 0;
 * flex: (flex-grow) (flex-shrink) (flex-basis)
 * aligh-self: (yfirskrifar align-items container valueið) flex-start | flex-end | center | baseline | stretch;
 * order: (eins og row-reverse hjálpar að displaya ekki hluti í sama röð og þeir koma fram í htmli nema meira flexible) tekur við int default 0 (segjum að við séum með tvo hluti með order values a og b þá er a fremur en b ef a < b annars er b fremri 
 *
 */


.section { display: flex; }


/**********************************
 *          SECTION ONE
 **********************************/
/* Implement a row which should have 200px as height,
 * all items should stretch from top to bottom and the
 * text should be centered both vertically and horizontally.
 * Every odd element should be twice as big as the even items.*/
 .section-1 {
    height: 200px;
 }
 .section-1 .flex-item {
    display: flex;
    justify-content: center;
    align-items: center;
}
.section-1 .flex-item:nth-child(even) {
    flex-grow: 0.5;
}
.section-1 .flex-item:nth-child(odd) {
    flex-grow: 1;
}

/**********************************
 *          SECTION TWO
 **********************************/
 .section-2 {
    flex-direction: column-reverse;
 }
 .section-2 :nth-child(1) {
    align-self: flex-start;
    flex-grow: 1;
 }
 .section-2 :nth-last-child(1) {
    align-self: flex-end;
    flex-grow: 1;
 }

/**********************************
 *          SECTION THREE
 **********************************/

/**********************************
 *          SECTION FOUR
 **********************************/
.section-4 .flex-item {
    height: 60px;
    width: 100px;
}

.section-4 {
    justify-content: space-between;
    align-items: center;
}
/**********************************
 *          SECTION FIVE
 **********************************/

/**********************************
 *          SECTION SIX
 **********************************/
 /* Initial image is with all characters in the left top corner.
  * Your job is to make the characters be on the ground and in the following order:
  * Mario, Peach, Luigi, Bowser and Wario */
.section-6 {
    flex-direction: row-reverse;
    justify-content: space-around;
    align-items: flex-end;
}

/**********************************
 *          SECTION SEVEN
 **********************************/

/**********************************
 *          SECTION EIGHT
 **********************************/
