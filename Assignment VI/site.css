/*========================================================
 
       T-427-WEPO Web Programming II
       Reykjavik University
       Assignment 6: FlexNPex
       Part: CSS
       Assignment Due: 28.03.2018
       Authors:
               Darri Valgarðsson,
               Edda Steinunn,
               Sigurður Sturla Bjarnasson
 ========================================================*/

/* GLÓSUR - FLEX CONTAINER ATTRIBUTES:
 * hafa main axis og cross axis sem eru hornrétt (fer eftir hvort er hvað eftir hvort direction er row eða col)
 * flex-direction: row | row-reverse | column | column-reverse
 * flex-wrap: nowrap | wrap | wrap-reverse
 * flex-flow: (flex-direction) (flex-wrap)
 * justify-content: (hvernig hlutir raðast á main axis) flex-start | center | space-around | space-between | flex-end;
 * align-items: (hvernig hlutir raðast á cross axis) flex-start | center | baseline | stretch(def) | flex-end;
 * align-content: (höndlar hvernig hlutir raðast ef það er overflow í containernum væntanlega virkar bara með wrap) flex-start | center | space-around | space-between | stretch | flex-end;
 * 
 * GLÓSUR - FLEX ITEM ATTRIBUTES:
 * flew-grow: (má ég stækka? hversu mikið má ég stækka í hlutfalli við hina?) 0 (ekki stækka) | 0.xx (hlutfall - má eiga allt afgangs plássið)
 * flex-shrink: öfugt við flex-grow
 * flex-basis: (size of context box, impacted by box sizing, accept same values as width) auto | content | % | px | 0;
 * flex: (flex-grow) (flex-shrink) (flex-basis)
 * aligh-self: (yfirskrifar align-items container valueið) flex-start | flex-end | center | baseline | stretch;
 * order: (eins og row-reverse hjálpar að displaya ekki hluti í sama röð og þeir koma fram í htmli nema meira flexible) tekur við int default 0 (segjum að við séum með tvo hluti með order values a og b þá er a fremur en b ef a < b annars er b fremri 
 *
 */

.section { display: flex; }

/**********************************
 *          SECTION ONE
 **********************************/
/* Implement a row which should have 200px as height,
 * all items should stretch from top to bottom and the
 * text should be centered both vertically and horizontally.
 * Every odd element should be twice as big as the even items.*/

 .section-1 {
    height: 200px;
 }
 .section-1 .flex-item {
    display: flex;
    justify-content: center;
    align-items: center;
}
.section-1 .flex-item:nth-child(even) {
    flex-grow: 0.5;
}
.section-1 .flex-item:nth-child(odd) {
    flex-grow: 1;
}


/**********************************
 *          SECTION TWO
 **********************************/
 /* Implement a column structure, where the first column should be aligned to the left and the
  * last column be aligned to the right. The column should start on the opposite number from 5 to 1.
  * The last and first child should take as much space as they can.*/

 .section-2 {
    flex-direction: column-reverse;
 }
 .section-2 :nth-child(1),
 .section-2 :nth-last-child(1) {
    flex-grow: 1;
    flex-basis: 100%;
    width: 50%;
 }
 .section-2 :nth-child(1) {
    align-self: flex-start;
 }
 .section-2 :nth-last-child(1) {
    align-self: flex-end;
 }


/**********************************
 *          SECTION THREE
 **********************************/
 /* Implement a column structure, where the first column should take all the space and the last column
  * should take all the space, other column should be wrapped nicely within the middle */

 .section-3 {
    flex-direction: column;
    align-content: stretch;
    flex-wrap: wrap;
 }
 .section-3 .flex-item {
     flex-basis: 50%;
 }
 .section-3 :nth-child(1),
 .section-3 :nth-last-child(1) {
    flex-basis: 100%;
 }


/**********************************
 *          SECTION FOUR
 **********************************/
 /* Implement a column structure which should be separated,
  * each column should have a height of 60px and width of 100px.
  * They should be separated as shown below. */

.section-4 .flex-item {
    height: 60px;
    width: 100px;
}
.section-4 {
    justify-content: space-between;
    align-items: center;
}


/**********************************
 *          SECTION FIVE
 **********************************/
 /* Order the space invaders so one green space invader is on the left side oppose the rest of the space invaders.
  * The remaining space invaders should be ordered so that all purple come first,
  * then the remaining green expect the one on the opposing side. See image below. */
 .section-5 {
    flex-direction: column-reverse;
    flex-wrap: wrap-reverse;
    align-items: center;
    justify-content: center;
}
.section-5 :nth-child(1) {
    order: 1;
}

/**********************************
 *          SECTION SIX
 **********************************/
 /* Initial image is with all characters in the left top corner.
  * Your job is to make the characters be on the ground and in the following order:
  * Mario, Peach, Luigi, Bowser and Wario */
.section-6 {
    flex-direction: row-reverse;
    justify-content: space-around;
    align-items: flex-end;
}

/**********************************
 *          SECTION SEVEN
 **********************************/
 .section-7 {
    flex-direction: column;
    flex-wrap: wrap-reverse;
    align-items: flex-start;
    flex-basis: 100%;
    justify-content: center;
    
 }
 .section-7 .cartoon {
    flex-grow: 1;
 }
 /* Order The Bears in correct order
  * Then have them take 100% of height so that the
  * fifth overflowing pink bear can take less height and be smaller */
 .section-7 .carebear-red       { order: 1; flex-basis: 25%; }
 .section-7 .carebear-green     { order: 2; flex-basis: 25%; }
 .section-7 .carebear-blue      { order: 3; flex-basis: 25%; }
 .section-7 .carebear-yellow    { order: 4; flex-basis: 25%; }
 .section-7 .carebear-pink {
    order: 5;
    flex-grow: 0;
    align-self: flex-end;
    flex-basis: 18%;
 }

/**********************************
 *          SECTION EIGHT
 **********************************/
 /* Implement a layout like the image below.
  * The one should be first and fill out the entire height of the element,
  * while the others should fill the rest of the element together */

 .section-8 {
     flex-direction: column-reverse;
     flex-wrap: wrap;
     flex-basis: 100%;
 }
.section-8 :nth-child(1) {
    flex-basis: 100%;
}
.section-8 .flex-item {
    flex-grow: 1;
}